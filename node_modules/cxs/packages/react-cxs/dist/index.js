'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var React = require('react');
var classnames = require('classnames');
var cxs = require('cxs').default;

var transformProps = function transformProps() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$css = _ref.css,
      css = _ref$css === undefined ? {} : _ref$css,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, ['css', 'className']);

  var cx = classnames(className, cxs(css));

  return _extends({}, rest, {
    className: cx
  });
};

var createElement = function createElement(tag, originalProps) {
  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  var props = transformProps(originalProps);

  return React.createElement.apply(React, [tag, props].concat(children));
};

module.exports = createElement;
module.exports.cxs = cxs;