'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cxs = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _cxs = require('cxs');

Object.defineProperty(exports, 'cxs', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_cxs).default;
  }
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _cxs2 = _interopRequireDefault(_cxs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var getProps = function getProps(originalProps, removeProps) {
  var props = Object.keys(originalProps).map(function (key) {
    var value = originalProps[key];
    return { key: key, value: value };
  }).filter(function (prop) {
    return removeProps.indexOf(prop.key) < 0;
  }).reduce(function (a, b) {
    a[b.key] = b.value;
    return a;
  }, {});
  return props;
};

var createComponent = function createComponent() {
  var Tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';
  return function () {
    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _options$defaultProps = options.defaultProps,
        defaultProps = _options$defaultProps === undefined ? {} : _options$defaultProps,
        _options$removeProps = options.removeProps,
        removeProps = _options$removeProps === undefined ? [] : _options$removeProps;


    var cx = typeof style === 'function' ? function (props) {
      return (0, _cxs2.default)(style(props));
    } : (0, _cxs2.default)(style);

    var Component = function Component(_ref) {
      var className = _ref.className,
          rest = _objectWithoutProperties(_ref, ['className']);

      var cxsClassName = typeof cx === 'function' ? cx(rest) : cx;
      var combinedClassName = (0, _classnames2.default)(cxsClassName, className);
      var props = getProps(rest, removeProps);

      return _react2.default.createElement(Tag, _extends({}, props, {
        className: combinedClassName
      }));
    };

    Component.defaultProps = defaultProps;

    return Component;
  };
};

exports.default = createComponent;