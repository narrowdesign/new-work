'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cxs = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cxs = require('cxs');

Object.defineProperty(exports, 'cxs', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_cxs).default;
  }
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _cxs2 = _interopRequireDefault(_cxs);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var withCxs = function withCxs(Comp) {
  var CxsComponent = function (_React$Component) {
    _inherits(CxsComponent, _React$Component);

    function CxsComponent() {
      _classCallCheck(this, CxsComponent);

      return _possibleConstructorReturn(this, (CxsComponent.__proto__ || Object.getPrototypeOf(CxsComponent)).apply(this, arguments));
    }

    _createClass(CxsComponent, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            _props$css = _props.css,
            css = _props$css === undefined ? {} : _props$css,
            className = _props.className,
            rest = _objectWithoutProperties(_props, ['css', 'className']);

        var cx = (0, _classnames2.default)(className, (0, _cxs2.default)(css));

        return _react2.default.createElement(Comp, _extends({}, rest, { className: cx }));
      }
    }]);

    return CxsComponent;
  }(_react2.default.Component);

  CxsComponent.propTypes = {
    className: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.object])
  };

  return CxsComponent;
};

exports.default = withCxs;